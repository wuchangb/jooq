/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.JFilmText;
import com.example.jooq.tables.pojos.FilmText;
import com.example.jooq.tables.records.FilmTextRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FilmTextDao extends DAOImpl<FilmTextRecord, FilmText, Long> {

    /**
     * Create a new FilmTextDao without any configuration
     */
    public FilmTextDao() {
        super(JFilmText.FILM_TEXT, FilmText.class);
    }

    /**
     * Create a new FilmTextDao with an attached configuration
     */
    public FilmTextDao(Configuration configuration) {
        super(JFilmText.FILM_TEXT, FilmText.class, configuration);
    }

    @Override
    public Long getId(FilmText object) {
        return object.getFilmId();
    }

    /**
     * Fetch records that have <code>film_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmText> fetchRangeOfJFilmId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(JFilmText.FILM_TEXT.FILM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>film_id IN (values)</code>
     */
    public List<FilmText> fetchByJFilmId(Long... values) {
        return fetch(JFilmText.FILM_TEXT.FILM_ID, values);
    }

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    public FilmText fetchOneByJFilmId(Long value) {
        return fetchOne(JFilmText.FILM_TEXT.FILM_ID, value);
    }

    /**
     * Fetch a unique record that has <code>film_id = value</code>
     */
    public Optional<FilmText> fetchOptionalByJFilmId(Long value) {
        return fetchOptional(JFilmText.FILM_TEXT.FILM_ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmText> fetchRangeOfJTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilmText.FILM_TEXT.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<FilmText> fetchByJTitle(String... values) {
        return fetch(JFilmText.FILM_TEXT.TITLE, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<FilmText> fetchRangeOfJDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(JFilmText.FILM_TEXT.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<FilmText> fetchByJDescription(String... values) {
        return fetch(JFilmText.FILM_TEXT.DESCRIPTION, values);
    }
}
