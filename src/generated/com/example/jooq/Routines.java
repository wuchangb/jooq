/*
 * This file is generated by jOOQ.
 */
package com.example.jooq;


import com.example.jooq.routines.JFilmInStock;
import com.example.jooq.routines.JFilmNotInStock;
import com.example.jooq.routines.JGetCustomerBalance;
import com.example.jooq.routines.JInventoryHeldByCustomer;
import com.example.jooq.routines.JInventoryInStock;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Configuration;
import org.jooq.Field;


/**
 * Convenience access to all stored procedures and functions in sakila.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Routines {

    /**
     * Call <code>sakila.film_in_stock</code>
     */
    public static Integer filmInStock(
          Configuration configuration
        , Long pFilmId
        , Long pStoreId
    ) {
        JFilmInStock p = new JFilmInStock();
        p.setPFilmId(pFilmId);
        p.setPStoreId(pStoreId);

        p.execute(configuration);
        return p.getPFilmCount();
    }

    /**
     * Call <code>sakila.film_not_in_stock</code>
     */
    public static Integer filmNotInStock(
          Configuration configuration
        , Long pFilmId
        , Long pStoreId
    ) {
        JFilmNotInStock p = new JFilmNotInStock();
        p.setPFilmId(pFilmId);
        p.setPStoreId(pStoreId);

        p.execute(configuration);
        return p.getPFilmCount();
    }

    /**
     * Call <code>sakila.get_customer_balance</code>
     */
    public static BigDecimal getCustomerBalance(
          Configuration configuration
        , Long pCustomerId
        , LocalDateTime pEffectiveDate
    ) {
        JGetCustomerBalance f = new JGetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>sakila.get_customer_balance</code> as a field.
     */
    public static Field<BigDecimal> getCustomerBalance(
          Long pCustomerId
        , LocalDateTime pEffectiveDate
    ) {
        JGetCustomerBalance f = new JGetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        return f.asField();
    }

    /**
     * Get <code>sakila.get_customer_balance</code> as a field.
     */
    public static Field<BigDecimal> getCustomerBalance(
          Field<Long> pCustomerId
        , Field<LocalDateTime> pEffectiveDate
    ) {
        JGetCustomerBalance f = new JGetCustomerBalance();
        f.setPCustomerId(pCustomerId);
        f.setPEffectiveDate(pEffectiveDate);

        return f.asField();
    }

    /**
     * Call <code>sakila.inventory_held_by_customer</code>
     */
    public static Integer inventoryHeldByCustomer(
          Configuration configuration
        , Long pInventoryId
    ) {
        JInventoryHeldByCustomer f = new JInventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>sakila.inventory_held_by_customer</code> as a field.
     */
    public static Field<Integer> inventoryHeldByCustomer(
          Long pInventoryId
    ) {
        JInventoryHeldByCustomer f = new JInventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Get <code>sakila.inventory_held_by_customer</code> as a field.
     */
    public static Field<Integer> inventoryHeldByCustomer(
          Field<Long> pInventoryId
    ) {
        JInventoryHeldByCustomer f = new JInventoryHeldByCustomer();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Call <code>sakila.inventory_in_stock</code>
     */
    public static Byte inventoryInStock(
          Configuration configuration
        , Long pInventoryId
    ) {
        JInventoryInStock f = new JInventoryInStock();
        f.setPInventoryId(pInventoryId);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>sakila.inventory_in_stock</code> as a field.
     */
    public static Field<Byte> inventoryInStock(
          Long pInventoryId
    ) {
        JInventoryInStock f = new JInventoryInStock();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }

    /**
     * Get <code>sakila.inventory_in_stock</code> as a field.
     */
    public static Field<Byte> inventoryInStock(
          Field<Long> pInventoryId
    ) {
        JInventoryInStock f = new JInventoryInStock();
        f.setPInventoryId(pInventoryId);

        return f.asField();
    }
}
